{"version":3,"sources":["Header.js","Sidebar.js","Footer.js","ChartContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","credits","className","src","Sidebar","bet","handleSubmit","handleChange","handleCashout","isPlacedBet","lastBets","value","name","onChange","type","onClick","map","index","lost","profit","Footer","lastMultipliers","item","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","ChartContainer","data","labels","datasets","label","multiplier","borderColor","backgroundColor","lineTension","options","responsive","maintainAspectRatio","scales","x","display","grid","elements","point","radius","App","useState","setMultiplier","multiplierDecimals","setMultiplierDecimals","setCredits","Math","random","toFixed","toString","winnerNumber","setWinnerNumber","secondsRestart","setSecondsRestart","secondsRestartVar","isExploded","setIsExploded","isCashedOut","setIsCashedOut","setIsPlacedBet","isTimerRender","setIsTimerRender","form","setForm","setLastMultipliers","setLastBets","cashout","setCashout","startMultiplier","useEffect","interval","setInterval","number","Number","setTimeout","intervalRestart","clearInterval","console","log","betObj","betProp","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc600db7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = ({ credits }) => {\r\n    return (\r\n        <div className=\"header\">\r\n            <span>\r\n                <img src=\"./assets/money.png\" className=\"money-icon\" />\r\n                {credits}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Sidebar = ({ bet, handleSubmit, handleChange, handleCashout, isPlacedBet, lastBets }) => {\r\n    return (\r\n        <div className=\"sidebar\">\r\n\r\n            <div className=\"sidebar-top\">\r\n                <form>\r\n                    <input value={bet} name=\"bet\" onChange={handleChange} type=\"number\" />\r\n                </form>\r\n                {\r\n                    isPlacedBet\r\n                        ? <button onClick={handleCashout}>Cash out</button>\r\n                        : <button onClick={handleSubmit} type=\"submit\">Place bet</button>\r\n                }\r\n            </div>\r\n\r\n            <div className=\"last-bets-list\">\r\n                {\r\n                    lastBets.map((bet, index) => (\r\n                        <div key={index} className=\"last-bets-item\">\r\n                            {\r\n                                bet.lost\r\n                                    ? <span className=\"last-bets-item-lost\">\r\n                                        - ${bet.profit}\r\n                                    </span>\r\n                                    : <span className=\"last-bets-item-won\">\r\n                                        + ${bet.profit}\r\n                                    </span>\r\n                            }\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\n\r\nconst Footer = ({ lastMultipliers }) => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"last-multipliers-list\">\r\n                <span>\r\n                    Lasts:\r\n                </span>\r\n                {lastMultipliers.map((item, index) => (\r\n                    <div key={index} className=\"last-multipliers-item\">\r\n                        {item}X\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement\r\n);\r\n\r\nconst ChartContainer = ({ multiplier }) => {\r\n\r\n    const options = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n            x: {\r\n                display: false,\r\n                grid: {\r\n                    display: false,\r\n                },\r\n            },\r\n        },\r\n        elements: {\r\n            point: {\r\n                radius: 0\r\n            }\r\n        }\r\n    };\r\n\r\n    const labels = [1, 1, 1];\r\n\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Dataset 1',\r\n                data: [0, 0.3, multiplier],\r\n                borderColor: '#716998',\r\n                backgroundColor: '#716998',\r\n                lineTension: 0.8\r\n            }\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <div className=\"chart-container\">\r\n            <Line options={options} data={data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartContainer\r\n","import './App.css'\nimport { useEffect, useState } from 'react';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport Footer from './Footer';\nimport ChartContainer from './ChartContainer';\n\n\nfunction App() {\n\n  const [multiplier, setMultiplier] = useState(1)\n  const [multiplierDecimals, setMultiplierDecimals] = useState(0)\n  const [credits, setCredits] = useState(10000)\n  const [winnerNumber, setWinnerNumber] = useState(((Math.random() * (19.99 - 1) + 1).toFixed(2) * 1).toString())\n  const [secondsRestart, setSecondsRestart] = useState(5)\n  var secondsRestartVar = secondsRestart\n\n\n  const [isExploded, setIsExploded] = useState(false)\n  const [isCashedOut, setIsCashedOut] = useState(false)\n  const [isPlacedBet, setIsPlacedBet] = useState(false)\n  const [isTimerRender, setIsTimerRender] = useState(false)\n\n  const [form, setForm] = useState({\n    bet: ''\n  })\n  const { bet } = form\n\n\n  const [lastMultipliers, setLastMultipliers] = useState([])\n  const [lastBets, setLastBets] = useState([])\n  const [cashout, setCashout] = useState('')\n\n\n  const startMultiplier = () => {\n    setMultiplierDecimals(multiplierDecimals + 1)\n    if (multiplierDecimals > 99) {\n      setMultiplier(multiplier + 1)\n      setMultiplierDecimals(0)\n    }\n  }\n\n\n\n  useEffect(() => {\n    const interval = setInterval(startMultiplier);\n    const number = `${multiplier}.${multiplierDecimals}`\n    setIsExploded(false)\n    if (Number(winnerNumber).toFixed(1) === Number(number).toFixed(1)) {\n      setLastMultipliers([winnerNumber, ...lastMultipliers])\n      setIsExploded(true)\n      setTimeout(() => {\n        setIsTimerRender(true)\n        const intervalRestart = setInterval(() => {\n          secondsRestartVar--\n          setSecondsRestart(secondsRestartVar)\n          if (secondsRestartVar === 0) {\n            clearInterval(intervalRestart)\n            setWinnerNumber(((Math.random() * (19.99 - 1) + 1).toFixed(2) * 1).toString())\n            setIsTimerRender(false)\n            setMultiplier(1)\n            setMultiplierDecimals(0)\n            setSecondsRestart(5)\n          }\n        }, 1000);\n      }, 2000);\n      clearInterval(interval)\n    }\n\n    return () => clearInterval(interval);\n\n  }, [multiplierDecimals])\n\n  useEffect(() => {\n    const profit = bet * cashout\n    console.log('profit', profit)\n    let betObj = {}\n    if (isExploded && isPlacedBet && !isCashedOut) {\n      betObj.profit = bet\n      betObj.betProp = bet\n      betObj.lost = true\n      setLastBets([betObj, ...lastBets])\n      setIsPlacedBet(false)\n      setCashout('')\n    }\n    if (isExploded && isPlacedBet && isCashedOut) {\n      betObj.profit = profit.toFixed(2)\n      betObj.betProp = bet\n      betObj.lost = false\n      setLastBets([betObj, ...lastBets])\n      setCredits(credits + profit)\n      setIsCashedOut(false)\n      setIsPlacedBet(false)\n      setCashout('')\n    }\n\n  }, [isExploded, isCashedOut, cashout])\n\n\n  const handleCashout = () => {\n    if (isExploded || !bet) return\n    const number = `${multiplier}.${multiplierDecimals}`\n    console.log(number)\n    setCashout(number)\n    setIsCashedOut(true)\n  }\n\n  const handleChange = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const handleSubmit = () => {\n    if (!isExploded || !bet) return\n    setCredits(credits - bet)\n    setIsPlacedBet(true)\n  }\n\n  return (\n    <>\n      <Header credits={credits} />\n      <div className=\"multiplier\">\n        {\n          isTimerRender\n            ? <h1>{secondsRestart}</h1>\n            : <h1>{multiplier}.{multiplierDecimals}X</h1>\n        }\n      </div>\n      <ChartContainer multiplier={multiplier} />\n      <Sidebar bet={bet} handleChange={handleChange} handleSubmit={handleSubmit} handleCashout={handleCashout} isPlacedBet={isPlacedBet} lastBets={lastBets} />\n      <Footer lastMultipliers={lastMultipliers} />\n    </>\n\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}